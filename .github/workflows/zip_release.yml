on:
  release:
    types: [published]

name: Upload Release Asset

env:
  frontend-artifact: "/opt/artifacts/frontend.zip"
  artifact-dir: "/opt/artifacts"
  backend-artifact: "/opt/artifacts/backend.zip"
  dotnet-version: 6.0.x
  node-version: "16"

jobs:
  zip-backend:
    name: Upload Backend Asset
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: backend

    steps:
      - uses: actions/checkout@v2

      - id: get_release
        uses: bruceadams/get-release@v1.2.3
        env:
          GITHUB_TOKEN: ${{ github.token }}

      - uses: actions/setup-dotnet@v1
        with:
          dotnet-version: ${{ env.dotnet-version }}

      - run: dotnet build
        working-directory: backend/Web

      - run: dotnet publish -c Release -o ${{ env.DOTNET_ROOT }}/app
        working-directory: backend/Web

      - run: mkdir -p ${{ env.artifact-dir }}
        working-directory: backend/Web

      - run: cd ${{ env.DOTNET_ROOT }}/app
        working-directory: backend/Web

      - run: zip -r ${{ env.backend-artifact }} .
        working-directory: backend/Web

      - uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.get_release.outputs.upload_url }}
          asset_path: ${{ env.backend-artifact }}
          asset_name: backend.zip
          asset_content_type: application/zip

  zip-frontend:
    name: Upload Frontend Asset
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: frontend

    steps:
      - uses: actions/checkout@v2

      - id: get_release
        uses: bruceadams/get-release@v1.2.3
        env:
          GITHUB_TOKEN: ${{ github.token }}

      - uses: actions/setup-node@v3.1.0
        with:
          node-version: ${{ env.node-version }}

      - run: npm ci
      - run: npm run build --if-present
        env:
          NEXT_PUBLIC_APP_VERSION: ${{ github.event.release.tag_name }}.${{ github.run_id }}
      - run: npm ci --production
      - run: rm -rf .next/cache
      - run: mkdir -p ${{ env.artifact-dir }}
      - run: zip -r ${{ env.frontend-artifact }} .next next.config.js package.json package-lock.json server.js web.config public node_modules src/i18n

      - uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.get_release.outputs.upload_url }}
          asset_path: ${{ env.frontend-artifact }}
          asset_name: frontend.zip
          asset_content_type: application/zip
